---
import Pill from "@components/atoms/Pill.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Layout from "@layouts/Default.astro";
import Button from "@components/atoms/Button.astro";
import PostGrid from "@components/generic/PostGrid.astro";
import PostItem from "@components/generic/PostItem.astro";
import BlogSummaryCard from "@components/blog/BlogSummaryCard.astro";

export async function getStaticPaths() {
  const allPosts = await getCollection("projects").then((collection) =>
    collection.reverse(),
  );

  const tags: string[] = [];

  allPosts.forEach((post) => {
    post.data.tags.forEach((tag) => {
      tags.push(tag.toLowerCase());
    });
  });

  return Array.from(new Set(tags)).map((tag) => {
    return {
      params: { tag },
      props: {
        tag,
        blogposts: allPosts.filter((post) =>
          post.data.tags.map((tag) => tag.toLowerCase()).includes(tag),
        ),
      },
    };
  });
}

interface Props {
  tag: string;
  blogposts: CollectionEntry<"projects">[];
}

const { tag, blogposts } = Astro.props;
---

<Layout
  title={`Projects: ${tag}`}
  description={`Projects | All projects tagged with ${tag}`}
  pageTitle={`Projects | Projects tagged with ${tag}`}
>
  <main class="bg-purple grid gap-4 p-6">
    <div class="flex-items-center flex gap-4">
      <Button href="/projects/">&larr; Back to projects</Button>

      <Pill><span class="case-capital">{tag}</span></Pill>
    </div>

    <PostGrid>
      {
        blogposts.map((post) => (
          <PostItem>
            <BlogSummaryCard post={post} context={{ baseUrl: "/projects" }} />
          </PostItem>
        ))
      }
    </PostGrid>
  </main>
</Layout>
